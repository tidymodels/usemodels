[{"path":[]},{"path":"https://usemodels.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://usemodels.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://usemodels.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://usemodels.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://usemodels.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://usemodels.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://usemodels.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://usemodels.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://usemodels.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://usemodels.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://usemodels.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://usemodels.tidymodels.org/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 usemodels authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://usemodels.tidymodels.org/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Max Kuhn. Author, maintainer. . Copyright holder, funder.","code":""},{"path":"https://usemodels.tidymodels.org/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kuhn M (2025). usemodels: Boilerplate Code 'Tidymodels' Analyses. R package version 0.2.0.9000, https://usemodels.tidymodels.org/.","code":"@Manual{,   title = {usemodels: Boilerplate Code for 'Tidymodels' Analyses},   author = {Max Kuhn},   year = {2025},   note = {R package version 0.2.0.9000},   url = {https://usemodels.tidymodels.org/}, }"},{"path":"https://usemodels.tidymodels.org/dev/index.html","id":"usemodels","dir":"","previous_headings":"","what":"Boilerplate Code for Tidymodels Analyses","title":"Boilerplate Code for Tidymodels Analyses","text":"usemodels package helpful way quickly creating code snippets fit models using tidymodels framework. Given simple formula data set, use_* functions can create code appropriate data (given model). example, using palmerpenguins data glmnet model: recipe steps used () depend type data well model. case, first two steps handle fact Species factor-encoded predictor (glmnet requires numeric predictors). last two steps added , model, predictors scale properly regularized. package includes templates: can also copy code clipboard using option clipboard = TRUE.","code":"> library(usemodels) > library(palmerpenguins) > data(penguins) > use_glmnet(body_mass_g ~ ., data = penguins) glmnet_recipe <-    recipe(formula = body_mass_g ~ ., data = penguins) |>    step_novel(all_nominal_predictors()) |>    step_dummy(all_nominal_predictors()) |>    step_zv(all_predictors()) |>    step_normalize(all_numeric_predictors())   glmnet_spec <-    linear_reg(penalty = tune(), mixture = tune()) |>    set_mode(\"regression\") |>    set_engine(\"glmnet\")   glmnet_workflow <-    workflow() |>    add_recipe(glmnet_recipe) |>    add_model(glmnet_spec)   glmnet_grid <- tidyr::crossing(penalty = 10^seq(-6, -1, length.out = 20), mixture = c(0.05,      0.2, 0.4, 0.6, 0.8, 1))   glmnet_tune <-    tune_grid(glmnet_workflow, resamples = stop(\"add your rsample object\"), grid = glmnet_grid) > ls(\"package:usemodels\", pattern = \"use_\")  [1] \"use_bag_tree_rpart\"   \"use_C5.0\"             \"use_cubist\"            [4] \"use_dbarts\"           \"use_earth\"            \"use_glmnet\"            [7] \"use_kernlab_svm_poly\" \"use_kernlab_svm_rbf\"  \"use_kknn\"             [10] \"use_mgcv\"             \"use_mixOmics\"         \"use_nnet\"             [13] \"use_ranger\"           \"use_rpart\"            \"use_xgboost\"          [16] \"use_xrf\""},{"path":"https://usemodels.tidymodels.org/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Boilerplate Code for Tidymodels Analyses","text":"can install usemodels :","code":"devtools::install_github(\"tidymodels/usemodels\")"},{"path":"https://usemodels.tidymodels.org/dev/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Boilerplate Code for Tidymodels Analyses","text":"project released Contributor Code Conduct. contributing project, agree abide terms. questions discussions tidymodels packages, modeling, machine learning, please post Posit Community. think encountered bug, please submit issue. Either way, learn create share reprex (minimal, reproducible example), clearly communicate code. Check details contributing guidelines tidymodels packages get help.","code":""},{"path":"https://usemodels.tidymodels.org/dev/reference/templates.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions to create boilerplate code for specific models — use_glmnet","title":"Functions to create boilerplate code for specific models — use_glmnet","text":"functions make suggestions code using common models. print code console considered minimal syntax respective techniques. creates prototype recipe workflow object can edited updated data require.","code":""},{"path":"https://usemodels.tidymodels.org/dev/reference/templates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions to create boilerplate code for specific models — use_glmnet","text":"","code":"use_glmnet(   formula,   data,   prefix = \"glmnet\",   verbose = FALSE,   tune = TRUE,   colors = TRUE,   clipboard = FALSE )  use_xgboost(   formula,   data,   prefix = \"xgboost\",   verbose = FALSE,   tune = TRUE,   colors = TRUE,   clipboard = FALSE )  use_kknn(   formula,   data,   prefix = \"kknn\",   verbose = FALSE,   tune = TRUE,   colors = TRUE,   clipboard = FALSE )  use_ranger(   formula,   data,   prefix = \"ranger\",   verbose = FALSE,   tune = TRUE,   colors = TRUE,   clipboard = FALSE )  use_earth(   formula,   data,   prefix = \"earth\",   verbose = FALSE,   tune = TRUE,   colors = TRUE,   clipboard = FALSE )  use_cubist(   formula,   data,   prefix = \"cubist\",   verbose = FALSE,   tune = TRUE,   colors = TRUE,   clipboard = FALSE )  use_kernlab_svm_rbf(   formula,   data,   prefix = \"kernlab\",   verbose = FALSE,   tune = TRUE,   colors = TRUE,   clipboard = FALSE )  use_kernlab_svm_poly(   formula,   data,   prefix = \"kernlab\",   verbose = FALSE,   tune = TRUE,   colors = TRUE,   clipboard = FALSE )  use_C5.0(   formula,   data,   prefix = \"C50\",   verbose = FALSE,   tune = TRUE,   colors = TRUE,   clipboard = FALSE )  use_nnet(   formula,   data,   prefix = \"nnet\",   verbose = FALSE,   tune = TRUE,   colors = TRUE,   clipboard = FALSE )  use_rpart(   formula,   data,   prefix = \"rpart\",   verbose = FALSE,   tune = TRUE,   colors = TRUE,   clipboard = FALSE )  use_bag_tree_rpart(   formula,   data,   prefix = \"rpart\",   verbose = FALSE,   tune = TRUE,   colors = TRUE,   clipboard = FALSE )  use_mgcv(   formula,   data,   prefix = \"mgcv\",   verbose = FALSE,   tune = TRUE,   colors = TRUE,   clipboard = FALSE )  use_dbarts(   formula,   data,   prefix = \"dbarts\",   verbose = FALSE,   tune = TRUE,   colors = TRUE,   clipboard = FALSE )  use_mixOmics(   formula,   data,   prefix = \"mixOmics\",   verbose = FALSE,   tune = TRUE,   colors = TRUE,   clipboard = FALSE )  use_xrf(   formula,   data,   prefix = \"xrf\",   verbose = FALSE,   tune = TRUE,   colors = TRUE,   clipboard = FALSE )"},{"path":"https://usemodels.tidymodels.org/dev/reference/templates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions to create boilerplate code for specific models — use_glmnet","text":"formula simple model formula -line functions. used template recipe object well determining outcome predictor columns used. data data frame columns used analysis. prefix single character string use prefix resulting objects. verbose single logical determined whether comments added printed code explaining certain lines used. tune single logical controls code model tuning printed. colors single logical coloring warnings code snippets require users attention (ignored colors = FALSE) clipboard single logical whether code output sent clip board printed console.","code":""},{"path":"https://usemodels.tidymodels.org/dev/reference/templates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functions to create boilerplate code for specific models — use_glmnet","text":"Invisible NULL code printed console.","code":""},{"path":"https://usemodels.tidymodels.org/dev/reference/templates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Functions to create boilerplate code for specific models — use_glmnet","text":"Based columns data, certain recipe steps printed. example, model requires qualitative predictors converted numeric (say, using dummy variables) additional step_dummy() added. Otherwise recipe step included output. syntax opinionated considered exact answer every data analysis. reasonable defaults.","code":""},{"path":"https://usemodels.tidymodels.org/dev/reference/templates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functions to create boilerplate code for specific models — use_glmnet","text":"","code":"if (rlang::is_installed(\"modeldata\")) {   library(modeldata)   data(ad_data)   use_glmnet(Class ~ ., data = ad_data)    data(Sacramento)   use_glmnet(price ~ ., data = Sacramento, verbose = TRUE, prefix = \"sac_homes\") } #>  #> Attaching package: ‘modeldata’ #> The following object is masked from ‘package:datasets’: #>  #>     penguins #> glmnet_recipe <-  #>   recipe(formula = Class ~ ., data = ad_data) |>  #>   step_novel(all_nominal_predictors()) |>  #>   step_dummy(all_nominal_predictors()) |>  #>   step_zv(all_predictors()) |>  #>   step_normalize(all_numeric_predictors())  #>  #> glmnet_spec <-  #>   logistic_reg(penalty = tune(), mixture = tune()) |>  #>   set_mode(\"classification\") |>  #>   set_engine(\"glmnet\")  #>  #> glmnet_workflow <-  #>   workflow() |>  #>   add_recipe(glmnet_recipe) |>  #>   add_model(glmnet_spec)  #>  #> glmnet_grid <- tidyr::crossing(penalty = 10^seq(-6, -1, length.out = 20), mixture = c(0.05,  #>     0.2, 0.4, 0.6, 0.8, 1))  #>  #> glmnet_tune <-  #>   tune_grid(glmnet_workflow, resamples = stop(\"add your rsample object\"), grid = glmnet_grid)  #>  #> sac_homes_recipe <-  #>   recipe(formula = price ~ ., data = Sacramento) |>  #>   step_novel(all_nominal_predictors()) |>  #>   ## This model requires the predictors to be numeric. The most common  #>   ## method to convert qualitative predictors to numeric is to create  #>   ## binary indicator variables (aka dummy variables) from these  #>   ## predictors.  #>   step_dummy(all_nominal_predictors()) |>  #>   ## Regularization methods sum up functions of the model slope  #>   ## coefficients. Because of this, the predictor variables should be on  #>   ## the same scale. Before centering and scaling the numeric predictors,  #>   ## any predictors with a single unique value are filtered out.  #>   step_zv(all_predictors()) |>  #>   step_normalize(all_numeric_predictors())  #>  #> sac_homes_spec <-  #>   linear_reg(penalty = tune(), mixture = tune()) |>  #>   set_mode(\"regression\") |>  #>   set_engine(\"glmnet\")  #>  #> sac_homes_workflow <-  #>   workflow() |>  #>   add_recipe(sac_homes_recipe) |>  #>   add_model(sac_homes_spec)  #>  #> sac_homes_grid <- tidyr::crossing(penalty = 10^seq(-6, -1, length.out = 20),  #>     mixture = c(0.05, 0.2, 0.4, 0.6, 0.8, 1))  #>  #> sac_homes_tune <-  #>   tune_grid(sac_homes_workflow, resamples = stop(\"add your rsample object\"),  #>     grid = sac_homes_grid)  #>"},{"path":"https://usemodels.tidymodels.org/dev/reference/usemodels-package.html","id":null,"dir":"Reference","previous_headings":"","what":"usemodels: Boilerplate Code for 'Tidymodels' Analyses — usemodels-package","title":"usemodels: Boilerplate Code for 'Tidymodels' Analyses — usemodels-package","text":"Code snippets fit models using tidymodels framework can easily created given data set.","code":""},{"path":[]},{"path":"https://usemodels.tidymodels.org/dev/reference/usemodels-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"usemodels: Boilerplate Code for 'Tidymodels' Analyses — usemodels-package","text":"Maintainer: Max Kuhn max@posit.co (ORCID) contributors: Posit Software, PBC (03wc8by49) [copyright holder, funder]","code":""},{"path":"https://usemodels.tidymodels.org/dev/news/index.html","id":"usemodels-development-version","dir":"Changelog","previous_headings":"","what":"usemodels (development version)","title":"usemodels (development version)","text":"Transition magrittr pipe base R pipe. Added use_nnet(), use_rpart(), use_bag_tree_rpart(), use_mgcv(), use_dbarts(), use_mixOmics(), use_xrf(). Fix recipe() call clipboard = TRUE","code":""},{"path":"https://usemodels.tidymodels.org/dev/news/index.html","id":"usemodels-020","dir":"Changelog","previous_headings":"","what":"usemodels 0.2.0","title":"usemodels 0.2.0","text":"CRAN release: 2022-02-18 SVM (#14) C5.0 (#9) models added. Clipboard access enabled use_*() functions using clipboard = TRUE argument (#12). Use new all_nominal_predictors() selector (#17).","code":""},{"path":"https://usemodels.tidymodels.org/dev/news/index.html","id":"usemodels-010","dir":"Changelog","previous_headings":"","what":"usemodels 0.1.0","title":"usemodels 0.1.0","text":"CRAN release: 2020-11-17 Updated version requirements dependencies. Added use_cubist(). Fixed bug handling variables step_string2factor()","code":""},{"path":"https://usemodels.tidymodels.org/dev/news/index.html","id":"usemodels-001","dir":"Changelog","previous_headings":"","what":"usemodels 0.0.1","title":"usemodels 0.0.1","text":"CRAN release: 2020-09-22 Added NEWS.md file track changes package.","code":""}]
